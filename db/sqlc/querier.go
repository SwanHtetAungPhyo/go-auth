// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// sql/queries/accounts.sql
	CreateAccount(ctx context.Context, arg CreateAccountParams) (GoauthAccount, error)
	CreateAccountIndexes(ctx context.Context) error
	CreateAccountTable(ctx context.Context) error
	CreateAuditLogTable(ctx context.Context) error
	CreateEmailVerificationTable(ctx context.Context) error
	// sql/queries/email_verification.sql
	CreateEmailVerificationToken(ctx context.Context, arg CreateEmailVerificationTokenParams) (GoauthEmailVerification, error)
	CreatePasswordResetTable(ctx context.Context) error
	// sql/queries/password_reset.sql
	CreatePasswordResetToken(ctx context.Context, arg CreatePasswordResetTokenParams) (GoauthPasswordReset, error)
	// sql/queries/sessions.sql
	CreateSession(ctx context.Context, arg CreateSessionParams) (GoauthSession, error)
	CreateSessionIndexes(ctx context.Context) error
	CreateSessionTable(ctx context.Context) error
	CreateUserIndexes(ctx context.Context) error
	CreateUserTable(ctx context.Context) error
	DeleteAccount(ctx context.Context, arg DeleteAccountParams) error
	DeleteEmailVerificationToken(ctx context.Context, token string) error
	DeleteExpiredEmailVerificationTokens(ctx context.Context) error
	DeleteExpiredPasswordResetTokens(ctx context.Context) error
	DeleteExpiredSessions(ctx context.Context) error
	DeletePasswordResetToken(ctx context.Context, token string) error
	DeleteSession(ctx context.Context, id uuid.UUID) error
	DeleteUser(ctx context.Context, id uuid.UUID) error
	DeleteUserEmailVerificationTokens(ctx context.Context, userID uuid.UUID) error
	DeleteUserPasswordResetTokens(ctx context.Context, userID uuid.UUID) error
	DeleteUserSessions(ctx context.Context, userID uuid.UUID) error
	GetAccountByProvider(ctx context.Context, arg GetAccountByProviderParams) (GetAccountByProviderRow, error)
	GetEmailVerificationToken(ctx context.Context, token string) (GoauthEmailVerification, error)
	GetPasswordResetToken(ctx context.Context, token string) (GoauthPasswordReset, error)
	GetSession(ctx context.Context, token string) (GoauthSession, error)
	GetSessionByID(ctx context.Context, id uuid.UUID) (GoauthSession, error)
	GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error)
	GetUserByID(ctx context.Context, userID uuid.UUID) (GetUserByIDRow, error)
	GoAuthRegister(ctx context.Context, arg GoAuthRegisterParams) (GoauthUser, error)
	// Complete setup in one command
	SetupAuthTables(ctx context.Context) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (GoauthUser, error)
	UpdateUserEmailVerified(ctx context.Context, arg UpdateUserEmailVerifiedParams) error
	UpdateUserTwoFactor(ctx context.Context, arg UpdateUserTwoFactorParams) error
}

var _ Querier = (*Queries)(nil)
